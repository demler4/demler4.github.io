[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "DANL Project",
    "section": "",
    "text": "About this project 👏\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "project.html#summary-statistics",
    "href": "project.html#summary-statistics",
    "title": "DANL Project",
    "section": "2.1 Summary Statistics",
    "text": "2.1 Summary Statistics\n\nmpg &lt;- ggplot2::mpg\n\n\n\n\n  \n\n\n\nskim(mpg) %&gt;% \n  select(-n_missing)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n1\n4\n10\n0\n15\n0\n\n\nmodel\n1\n2\n22\n0\n38\n0\n\n\ntrans\n1\n8\n10\n0\n10\n0\n\n\ndrv\n1\n1\n1\n0\n3\n0\n\n\nfl\n1\n1\n1\n0\n5\n0\n\n\nclass\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n▇▆▆▃▁\n\n\nyear\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n▇▁▁▁▇\n\n\ncyl\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n▇▁▇▁▇\n\n\ncty\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n▆▇▃▁▁\n\n\nhwy\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n▅▅▇▁▁"
  },
  {
    "objectID": "project.html#mpg-and-a-type-of-cars",
    "href": "project.html#mpg-and-a-type-of-cars",
    "title": "DANL Project",
    "section": "2.2 MPG and a Type of Cars",
    "text": "2.2 MPG and a Type of Cars\nThe following boxplot shows how the distribution of highway MPG (hwy) varies by a type of cars (class) 🚙 🚚 🚐.\n\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy, fill = class),\n               show.legend = F) +\n  labs(x = \"Class\", y = \"Highway\\nMPG\")"
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Dylans Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nWelcome to my Blog\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nDylan Emler\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nSpotify\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nDylan Emler\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\nRestaurant Inspection\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nDylan Emler\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\nNFL Data\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nDylan Emler\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nBeer Markets\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nDylan Emler\n\n\n2 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "danl200-hw5-Emler_Dylane.qmd/danl200-hw5-Emler_Dylane.qmd.html",
    "href": "danl200-hw5-Emler_Dylane.qmd/danl200-hw5-Emler_Dylane.qmd.html",
    "title": "danl200-hw5-Emler_Dylane.qmd",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org"
  },
  {
    "objectID": "danl200-hw5-Emler_Dylane.qmd/danl200-hw5-Emler_Dylane.qmd.html#quarto",
    "href": "danl200-hw5-Emler_Dylane.qmd/danl200-hw5-Emler_Dylane.qmd.html#quarto",
    "title": "danl200-hw5-Emler_Dylane.qmd",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org"
  },
  {
    "objectID": "danl200-hw5-Emler_Dylane.qmd/danl200-hw5-Emler_Dylane.qmd.html#repository",
    "href": "danl200-hw5-Emler_Dylane.qmd/danl200-hw5-Emler_Dylane.qmd.html#repository",
    "title": "danl200-hw5-Emler_Dylane.qmd",
    "section": "Repository",
    "text": "Repository\nhttps://github.com/demler4/demler4.github.io"
  },
  {
    "objectID": "danl200-hw5-Emler_Dylane.qmd/danl200-hw5-Emler_Dylane.qmd.html#git-hub-website",
    "href": "danl200-hw5-Emler_Dylane.qmd/danl200-hw5-Emler_Dylane.qmd.html#git-hub-website",
    "title": "danl200-hw5-Emler_Dylane.qmd",
    "section": "Git hub website",
    "text": "Git hub website"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome to my Blog",
    "section": "",
    "text": "Welcome! In the best blog ever, we only talk about the best things."
  },
  {
    "objectID": "posts/Spotify/index.html",
    "href": "posts/Spotify/index.html",
    "title": "Spotify",
    "section": "",
    "text": "Welcome! In this section we go over the top ranked songs on spofity.\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nspotify_all &lt;- read.csv(\"/Users/dylanemler/Documents/Files/spotify_all.csv\")\nQ1c &lt;- spotify_all %&gt;% \n  group_by(artist_name) %&gt;% \n  mutate(n_popular_artist = n()) %&gt;% \n  ungroup() %&gt;% \n  mutate( artist_ranking = dense_rank( desc(n_popular_artist) ) ) %&gt;% \n  filter( artist_ranking &lt;= 10) \n  \n# boxplot\nggplot(Q1c,\n       aes(x = pos, y = fct_reorder(artist_name, -artist_ranking)) ) +\n  geom_boxplot() +\n  stat_summary(\n    fun = mean,\n    color = 'red'\n  )\n\nWarning: Removed 10 rows containing missing values (`geom_segment()`).\n\n\n\n\n\nBased on what we can see in the box plot, the graph is skewed right. This means that most of the time the Song users play the artist songs earlier in their playlists.\n\nlibrary(tidyselect)\n\ntop_artists &lt;- spotify_all %&gt;%\n  group_by(artist_name) %&gt;%\n  summarize(total_duration = sum(duration_ms)) %&gt;%\n  arrange(desc(total_duration)) %&gt;%\n  head(10)\n\nggplot(top_artists, aes(x = reorder(artist_name, -total_duration), y = total_duration)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(title = \"Top 10 Artists by Total Duration\",\n       x = \"Artist Name\",\n       y = \"Total Duration (ms)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\nThe graph shows the the top 10 artist by total duration, in milliseconds, of songs made by the artist.\n\ntop_songs &lt;- spotify_all %&gt;%\n  group_by(track_name) %&gt;%\n  summarize(total_duration = sum(duration_ms)) %&gt;%\n  arrange(desc(total_duration)) %&gt;%\n  head(10)\n\nggplot(top_songs, aes(x = reorder(track_name, -total_duration), y = total_duration)) +\n  geom_bar(stat = \"identity\", fill = \"lightgreen\") +\n  labs(title = \"Top 10 Songs by Total Duration\",\n       x = \"Track Name\",\n       y = \"Total Duration (ms)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\nThis graph shows the top 10 aritsts based on who has the longest song."
  },
  {
    "objectID": "posts/NFL Data/index.html",
    "href": "posts/NFL Data/index.html",
    "title": "NFL Data",
    "section": "",
    "text": "Welcome! Here we will be going over the NFL data.\n## Q2a. In data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(skimr)\nlibrary(ggplot2)\nlibrary(dplyr)\n\nNFL2022_stuffs &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n\nRows: 50147 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): game_id, posteam\ndbl (8): play_id, drive, week, qtr, down, half_seconds_remaining, pass, wp\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nQ2a &lt;- NFL2022_stuffs %&gt;%\n  filter(!is.na(posteam))\nprint(Q2a)\n\n# A tibble: 46,427 × 10\n   play_id game_id  drive  week posteam   qtr  down half_seconds_remaining  pass\n     &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n 1      43 2022_01…     1     1 NYJ         1    NA                   1800     0\n 2      68 2022_01…     1     1 NYJ         1     1                   1796     0\n 3      89 2022_01…     1     1 NYJ         1     1                   1769     1\n 4     115 2022_01…     1     1 NYJ         1     2                   1765     0\n 5     136 2022_01…     1     1 NYJ         1     3                   1741     1\n 6     172 2022_01…     1     1 NYJ         1     4                   1733     0\n 7     202 2022_01…     2     1 BAL         1     1                   1722     1\n 8     230 2022_01…     2     1 BAL         1     2                   1701     1\n 9     254 2022_01…     2     1 BAL         1     3                   1661     0\n10     275 2022_01…     2     1 BAL         1     1                   1621     0\n# ℹ 46,417 more rows\n# ℹ 1 more variable: wp &lt;dbl&gt;"
  },
  {
    "objectID": "posts/NFL Data/index.html#q2b.",
    "href": "posts/NFL Data/index.html#q2b.",
    "title": "NFL Data",
    "section": "Q2b.",
    "text": "Q2b.\nSummarize the mean value of pass for each posteam when all the following conditions hold: -wp is greater than 20% and less than 75%; -down is less than or equal to 2; and -half_seconds_remaining is greater than 120.\n\nQ2b &lt;- NFL2022_stuffs %&gt;%\n  filter(wp &gt; 0.20 & wp &lt; 0.75, down &lt;= 2, half_seconds_remaining &gt; 120) %&gt;%\n  group_by(posteam) %&gt;%\n  summarise(mean_pass = mean(pass, na.rm = TRUE))\nprint(Q2b)\n\n# A tibble: 32 × 2\n   posteam mean_pass\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 ARI         0.553\n 2 ATL         0.4  \n 3 BAL         0.520\n 4 BUF         0.604\n 5 CAR         0.458\n 6 CHI         0.420\n 7 CIN         0.657\n 8 CLE         0.491\n 9 DAL         0.474\n10 DEN         0.493\n# ℹ 22 more rows"
  },
  {
    "objectID": "posts/NFL Data/index.html#q2c.",
    "href": "posts/NFL Data/index.html#q2c.",
    "title": "NFL Data",
    "section": "Q2c.",
    "text": "Q2c.\nProvide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam. In the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\n\nQ2ca &lt;- Q2b %&gt;%\n  arrange(mean_pass)\n\nggplot(Q2ca, aes(x = mean_pass, y = reorder(posteam, mean_pass))) +\n  geom_point() +\n  labs(title = \"Mean Value of 'pass' for Each posteam\",\n       x = \"Mean pass Value\",\n       y = \"posteam\") +\n  theme_minimal() +\n  theme(axis.text.y = element_text(angle = 45, hjust = 1, vjust = 1))"
  },
  {
    "objectID": "posts/NFL Data/index.html#q2d.",
    "href": "posts/NFL Data/index.html#q2d.",
    "title": "NFL Data",
    "section": "Q2d.",
    "text": "Q2d.\nConsider the following data.frame, NFL2022_epa:\nCreate the data.frame, NFL2022_stuffs_EPA, that includes All the variables in the data.frame, NFL2022_stuffs; The variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames. In the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\nNFL2022_epa &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n\nRows: 46427 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): game_id, posteam, receiver, passer\ndbl (3): play_id, drive, epa\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nNFL2022_stuffs_EPA &lt;- left_join(NFL2022_stuffs, NFL2022_epa, by = c(\"play_id\", \"game_id\", \"drive\", \"posteam\"))\n\nNFL2022_stuffs_EPA &lt;- NFL2022_stuffs_EPA %&gt;%\n  filter(!is.na(passer))\n\nstr(NFL2022_stuffs_EPA)\n\nspc_tbl_ [22,457 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ play_id               : num [1:22457] 89 136 202 230 301 412 436 511 552 595 ...\n $ game_id               : chr [1:22457] \"2022_01_BAL_NYJ\" \"2022_01_BAL_NYJ\" \"2022_01_BAL_NYJ\" \"2022_01_BAL_NYJ\" ...\n $ drive                 : num [1:22457] 1 1 2 2 2 3 3 3 4 4 ...\n $ week                  : num [1:22457] 1 1 1 1 1 1 1 1 1 1 ...\n $ posteam               : chr [1:22457] \"NYJ\" \"NYJ\" \"BAL\" \"BAL\" ...\n $ qtr                   : num [1:22457] 1 1 1 1 1 1 1 1 1 1 ...\n $ down                  : num [1:22457] 1 3 1 2 2 2 3 3 1 3 ...\n $ half_seconds_remaining: num [1:22457] 1769 1741 1722 1701 1579 ...\n $ pass                  : num [1:22457] 1 1 1 1 1 1 1 1 1 1 ...\n $ wp                    : num [1:22457] 0.573 0.54 0.496 0.497 0.507 ...\n $ receiver              : chr [1:22457] \"Mi.Carter\" NA \"R.Bateman\" \"D.Duvernay\" ...\n $ passer                : chr [1:22457] \"J.Flacco\" \"J.Flacco\" \"L.Jackson\" \"L.Jackson\" ...\n $ epa                   : num [1:22457] -0.4922 -2.4022 0.0751 -0.1051 0.4111 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   play_id = col_double(),\n  ..   game_id = col_character(),\n  ..   drive = col_double(),\n  ..   week = col_double(),\n  ..   posteam = col_character(),\n  ..   qtr = col_double(),\n  ..   down = col_double(),\n  ..   half_seconds_remaining = col_double(),\n  ..   pass = col_double(),\n  ..   wp = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt;"
  },
  {
    "objectID": "posts/NFL Data/index.html#q2e.",
    "href": "posts/NFL Data/index.html#q2e.",
    "title": "NFL Data",
    "section": "Q2e.",
    "text": "Q2e.\nProvide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers, “J.Allen” “P.Mahomes”\n\nselected_passers &lt;- c(\"J.Allen\", \"P.Mahomes\")\nfiltered_data &lt;- NFL2022_stuffs_EPA %&gt;%\n  filter(passer %in% selected_passers)\n\nggplot() +\n  geom_line(data = filtered_data %&gt;% filter(passer == \"J.Allen\"), aes(x = week, y = epa, color = passer)) +\n  geom_line(data = filtered_data %&gt;% filter(passer == \"P.Mahomes\"), aes(x = week, y = epa, color = passer)) +\n  labs(title = \"NFL Weekly Trend of Mean EPA for J.Allen and P.Mahomes\",\n       x = \"Week\",\n       y = \"Mean EPA\") +\n  theme_minimal()"
  },
  {
    "objectID": "posts/NFL Data/index.html#q2f.",
    "href": "posts/NFL Data/index.html#q2f.",
    "title": "NFL Data",
    "section": "Q2f.",
    "text": "Q2f.\nCalculate the difference between the mean value of epa for “J.Allen” the mean value of epa for “P.Mahomes” for each value of week.\n\nselected_passers &lt;- c(\"J.Allen\", \"P.Mahomes\")\nfiltered_data &lt;- NFL2022_stuffs_EPA %&gt;%\n  filter(passer %in% selected_passers)\n\ndifference_data &lt;- filtered_data %&gt;%\n  group_by(week, passer) %&gt;%\n  summarise(mean_epa = mean(epa), .groups = \"drop\") %&gt;%\n  spread(passer, mean_epa) %&gt;%\n  mutate(difference = J.Allen - P.Mahomes) %&gt;%\n  select(week, difference)\n\nprint(difference_data)\n\n# A tibble: 22 × 2\n    week difference\n   &lt;dbl&gt;      &lt;dbl&gt;\n 1     1    -0.169 \n 2     2     0.339 \n 3     3    -0.0763\n 4     4    -0.0803\n 5     5     0.325 \n 6     6     0.173 \n 7     7    NA     \n 8     8    NA     \n 9     9    -0.304 \n10    10    -0.429 \n# ℹ 12 more rows"
  },
  {
    "objectID": "posts/NFL Data/index.html#q2g.",
    "href": "posts/NFL Data/index.html#q2g.",
    "title": "NFL Data",
    "section": "Q2g.",
    "text": "Q2g.\nSummarize the resulting data.frame in Q2d, with the following four variables:\nposteam: String abbreviation for the team with possession. passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.) mean_epa: Mean value of epa in 2022 for each passer n_pass: Number of observations for each passer Then find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.\n\nQ2g &lt;- NFL2022_stuffs_EPA %&gt;%\n  group_by(posteam, passer) %&gt;%\n  summarise(mean_epa = mean(epa), n_pass = n(), .groups = \"drop\") %&gt;%\n  filter(n_pass &gt;= quantile(n_pass, 0.75)) %&gt;%\n  top_n(10, mean_epa)\nprint(Q2g)\n\n# A tibble: 10 × 4\n   posteam passer       mean_epa n_pass\n   &lt;chr&gt;   &lt;chr&gt;           &lt;dbl&gt;  &lt;int&gt;\n 1 BUF     J.Allen        0.172     785\n 2 CIN     J.Burrow       0.153     854\n 3 CLE     J.Brissett     0.0912    445\n 4 DAL     D.Prescott     0.147     529\n 5 DET     J.Goff         0.171     661\n 6 JAX     T.Lawrence     0.128     764\n 7 KC      P.Mahomes      0.286     880\n 8 MIA     T.Tagovailoa   0.234     453\n 9 PHI     J.Hurts        0.138     672\n10 SF      J.Garoppolo    0.200     348"
  },
  {
    "objectID": "posts/Beer Markets/index.html",
    "href": "posts/Beer Markets/index.html",
    "title": "Beer Markets",
    "section": "",
    "text": "In this section of the website, we cover Beer!\n\n\nlibrary(ggplot2)\n\nbeer_mkts &lt;- read.csv('https://bcdanl.github.io/data/beer_markets.csv')\n\nggplot(beer_mkts, aes(x = dollar_spent)) +\n  geom_histogram(binwidth = 5, fill = \"#66c2a5\", color = \"black\") +\n  labs(title = \"Histogram of Dollar Spent on Beer\",\n       x = \"Dollar Spent\",\n       y = \"Frequency\") +\n  theme_minimal()\n\n\n\n\nThis graph shows the relationship between the amount households spend on alchol and how many spend that amount.\n\nggplot(beer_mkts, aes(x = brand, y = price_per_floz, fill = brand)) +\n  geom_boxplot() +\n  labs(title = \"Boxplot of Price per fl.oz. by Beer Brand\",\n       x = \"Brand\",\n       y = \"Price per fl.oz.\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\n\n\n\n\nThis graph shows the average price per fluid ounce as well as the range based on brand. The data is shown by a box plot.\n\nggplot(beer_mkts, aes(x = beer_floz, y = dollar_spent, color = brand)) +\n  geom_point(alpha = 0.7) +\n  labs(title = \"Scatter Plot of Beer Volume vs. Dollar Spent by Brand\",\n       x = \"Beer Volume (fl.oz.)\",\n       y = \"Dollar Spent\") +\n  theme_minimal()\n\n\n\n\nThis graph shows the relationship between the volume of beer purchased and the price spent."
  },
  {
    "objectID": "posts/Inspection/index.html",
    "href": "posts/Inspection/index.html",
    "title": "Restaurant Inspection",
    "section": "",
    "text": "Welcome! Here we go over Restaurants and their different rankings\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(skimr)\nlibrary(ggplot2)\nrestaurants_data &lt;- read.csv(\"/Users/dylanemler/Documents/Files/DOHMH_NYC_Restaurant_Inspection.csv\")\n\nggplot(restaurants_data, aes(x = factor(BORO))) +\n  geom_bar(fill = \"#66c2a5\", color = \"black\") +\n  labs(title = \"Distribution of Restaurants Across Boroughs\",\n       x = \"Borough\",\n       y = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\n\n\n\n\nThis bar chart shows the how many restaurants are in all the different boroughs.\n\nlibrary(tidyverse)\nlibrary(skimr)\nlibrary(ggplot2)\nrestaurants_data &lt;- read.csv(\"/Users/dylanemler/Documents/Files/DOHMH_NYC_Restaurant_Inspection.csv\")\n\nggplot(restaurants_data, aes(x = factor(`VIOLATION.CODE`))) +\n  geom_bar(fill = \"#66c2a5\", color = \"black\", width = 0.7) +\n  labs(title = \"Distribution of Violation Codes\",\n       x = \"Violation Code\",\n       y = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 8),\n        axis.title.x = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        legend.position = \"none\") +\n  scale_x_discrete(labels = function(x) ifelse(seq_along(x) %% 5 == 0, x, \"\"))\n\n\n\n\nThis graph shows the the type of violation codes and how many restaraunts got that grade when they were inspected.\n\nlibrary(tidyverse)\nlibrary(skimr)\nlibrary(ggplot2)\nrestaurants_data &lt;- read.csv(\"/Users/dylanemler/Documents/Files/DOHMH_NYC_Restaurant_Inspection.csv\")\n\n\nggplot(restaurants_data, aes(x = factor(BORO), y = SCORE, fill = factor(BORO))) +\n  geom_boxplot() +\n  labs(title = \"Distribution of Inspection Scores by Borough\",\n       x = \"Borough\",\n       y = \"Inspection Score\") +\n  theme_minimal()\n\n\n\n\nThis graph shows the distribution of inspection scores by each borough. Mannhattan and Queens had the highest rated restauraunts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Dylan Emler",
    "section": "",
    "text": "Hi, my name is Dylan Emler and i am an accounting student at SUNY Geneseo. I started my college jounrey at Monroe community College and transferred into Geneseo in the fall of 2023. Before i decided i wanted to become an accountant, i owned and operated a lawn care business as well as worked in HVAC and Masonry. Since then i have completed an auditing internship For a top 50 accounting firm and am activley purusing my accounting degree."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Dylan Emler",
    "section": "Education",
    "text": "Education\nMonroe Community College - Fall 2021 to spring 2023 Business Administration\nSUNY Geneseo - Fall 2023 to Present Accounting"
  }
]