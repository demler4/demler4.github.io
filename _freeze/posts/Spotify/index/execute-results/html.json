{
  "hash": "e4606bcbe1b4f55b6aba9f5861f1da06",
  "result": {
    "markdown": "---\ntitle: \"Spotify\"\nauthor: \"Dylan Emler\"\ndate: \"2023-10-27\"\ncategories: [news]\n---\n\n\nWelcome! In this section we go over the top ranked songs on spofity. \n\n![](Spotify.png)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nspotify_all <- read.csv(\"/Users/dylanemler/Documents/Files/spotify_all.csv\")\nQ1c <- spotify_all %>% \n  group_by(artist_name) %>% \n  mutate(n_popular_artist = n()) %>% \n  ungroup() %>% \n  mutate( artist_ranking = dense_rank( desc(n_popular_artist) ) ) %>% \n  filter( artist_ranking <= 10) \n  \n# boxplot\nggplot(Q1c,\n       aes(x = pos, y = fct_reorder(artist_name, -artist_ranking)) ) +\n  geom_boxplot() +\n  stat_summary(\n    fun = mean,\n    color = 'red'\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 10 rows containing missing values (`geom_segment()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nBased on what we can see in the box plot, the graph is skewed right. This means that most of the time the Song users play the artist songs earlier in their playlists. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyselect)\n\ntop_artists <- spotify_all %>%\n  group_by(artist_name) %>%\n  summarize(total_duration = sum(duration_ms)) %>%\n  arrange(desc(total_duration)) %>%\n  head(10)\n\nggplot(top_artists, aes(x = reorder(artist_name, -total_duration), y = total_duration)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(title = \"Top 10 Artists by Total Duration\",\n       x = \"Artist Name\",\n       y = \"Total Duration (ms)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\nThe graph shows the the top 10 artist by total duration, in milliseconds, of songs made by the artist. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_songs <- spotify_all %>%\n  group_by(track_name) %>%\n  summarize(total_duration = sum(duration_ms)) %>%\n  arrange(desc(total_duration)) %>%\n  head(10)\n\nggplot(top_songs, aes(x = reorder(track_name, -total_duration), y = total_duration)) +\n  geom_bar(stat = \"identity\", fill = \"lightgreen\") +\n  labs(title = \"Top 10 Songs by Total Duration\",\n       x = \"Track Name\",\n       y = \"Total Duration (ms)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\nThis graph shows the top 10 aritsts based on who has the longest song. \n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}